
// sherwood_table generated by DK/circ_table_gen.py -- do not modify manually

 // variables used
 // --sig_max  12.000000
 // --table_div  14.000000
 // --table_op  6.000000

struct tablesherwood { // 1-dimensional function table
    float low;
    float high;
    float istep;
    int size;
    float data[];
};

template <int tab_size>
struct tablesherwood_imp {
    float low;
    float high;
    float istep;
    int size;
    float data[tab_size];
    operator tablesherwood&() const { return *(tablesherwood*)this; }
};

 static tablesherwood_imp<200> sherwood_table __rt_data = {
	0,0.579683,99.5,200, {
	0.000000000000,0.000521785821,0.001857091978,0.003544298192,0.005380725253,
	0.007356883262,0.009448521257,0.011648058915,0.013942600209,0.016326038713,
	0.018789640460,0.021328346360,0.023935585526,0.026607089877,0.029337637664,
	0.032123586317,0.034960652451,0.037845703457,0.040775155341,0.043746299810,
	0.046756098470,0.049802201065,0.052882008243,0.055993474861,0.059134362625,
	0.062302888273,0.065497115106,0.068715485839,0.071956318597,0.075218251884,
	0.078499820986,0.081799834568,0.085117014205,0.088450316808,0.091798624571,
	0.095161023812,0.098536535766,0.101924359890,0.105323638170,0.108733669095,
	0.112153699792,0.115583115523,0.119021255156,0.122467580047,0.125921509252,
	0.129382570898,0.132850254233,0.136324146002,0.139803796972,0.143288845371,
	0.146778895933,0.150273632116,0.153772706040,0.157275840905,0.160782730470,
	0.164293132862,0.167806778445,0.171323456044,0.174842928226,0.178365010792,
	0.181889494649,0.185416219306,0.188945000619,0.192475698929,0.196008152061,
	0.199542238656,0.203077815896,0.206614778492,0.210153000677,0.213692391276,
	0.217232839543,0.220774266692,0.224316575217,0.227859697198,0.231403546799,
	0.234948065629,0.238493178135,0.242038834279,0.245584967572,0.249131535289,
	0.252678478930,0.256225762174,0.259773333560,0.263321162364,0.266869203331,
	0.270417430628,0.273965804466,0.277514303281,0.281062892102,0.284611553085,
	0.288160255502,0.291708984750,0.295257713837,0.298806430979,0.302355112473,
	0.305903748980,0.309452319695,0.313000817397,0.316549223829,0.320097533603,
	0.323645730706,0.327193811330,0.330741761432,0.334289578565,0.337837250421,
	0.341384775719,0.344932143673,0.348479353999,0.352026397250,0.355573273990,
	0.359119975946,0.362666504400,0.366212852111,0.369759020965,0.373305004623,
	0.376850805477,0.380396417978,0.383941844939,0.387487081501,0.391032130821,
	0.394576988642,0.398121658401,0.401666136366,0.405210426194,0.408754524611,
	0.412298435442,0.415842155811,0.419385689669,0.422929034479,0.426472194280,
	0.430015166829,0.433557956214,0.437100560441,0.440642983617,0.444185223954,
	0.447727285548,0.451269166778,0.454810871699,0.458352398816,0.461893752110,
	0.465434930170,0.468975936864,0.472516770813,0.476057435722,0.479597930172,
	0.483138257628,0.486678416526,0.490218409953,0.493758236008,0.497297897135,
	0.500837390686,0.504376717819,0.507915874037,0.511454857211,0.514993656753,
	0.518532256206,0.522070590100,0.525554571950,0.528887933627,0.532034148445,
	0.535003723499,0.537806575977,0.540452066282,0.542949029289,0.545305803853,
	0.547530260656,0.549629828489,0.551611519067,0.553481950441,0.555247369101,
	0.556913670836,0.558486420427,0.559970870224,0.561371977695,0.562694421976,
	0.563942619501,0.565120738747,0.566232714161,0.567282259294,0.568272879206,
	0.569207882169,0.570090390718,0.570923352077,0.571709548004,0.572451604076,
	0.573151998464,0.573813070203,0.574437027008,0.575025952644,0.575581813886,
	0.576106467088,0.576601664380,0.577069059524,0.577510213431,0.577926599378,
	0.578319607927,0.578690551570,0.579040669108,0.579371129794,0.579683037234
	}
};

double always_inline sherwoodclip(double x) {
    double f = fabs(x);
    f = f * sherwood_table.istep;
    int i = static_cast<int>(f);
    if (i < 0) {
        f = sherwood_table.data[0];
    } else if (i >= sherwood_table.size-1) {
        f = sherwood_table.data[sherwood_table.size-1];
    } else {
    f -= i;
    f = sherwood_table.data[i]*(1-f) + sherwood_table.data[i+1]*f;
    }
    return copysign(f, x);
}

