
// epiphone_jr_out_table generated by DK/circ_table_gen.py -- do not modify manually

 // variables in use
 // max_sig = 20.000000
 // step operator = 0.050000
 // divider = 5.990018

struct tableepiphone_jr_out { // 1-dimensional function table
    float low;
    float high;
    float istep;
    int size;
    float data[];
};

template <int tab_size>
struct tableepiphone_jr_out_imp {
    float low;
    float high;
    float istep;
    int size;
    float data[tab_size];
    operator tableepiphone_jr_out&() const { return *(tableepiphone_jr_out*)this; }
};

 static tableepiphone_jr_out_imp<200> epiphone_jr_out_table __rt_data = {
	0,0.833333,9.95,200, {
	0.000000000000,0.005032048564,0.010173197629,0.015421065369,0.020773317213,
	0.026227663112,0.031781857139,0.037433695399,0.043181015047,0.049021693398,
	0.054953645059,0.060974821965,0.067083211100,0.073276833294,0.079553742580,
	0.085912022152,0.092349787326,0.098865178572,0.105456364044,0.112121537581,
	0.118858914895,0.125666732345,0.132543248296,0.139486737078,0.146495489565,
	0.153567810787,0.160702018867,0.167896438238,0.175149404007,0.182459255789,
	0.189824335103,0.197242984566,0.204713543437,0.212234342432,0.219803704450,
	0.227419943395,0.235081352015,0.242786204299,0.250532750797,0.258319207972,
	0.266143762161,0.274004558304,0.281899695452,0.289827220378,0.297785120647,
	0.305771317141,0.313783655911,0.321819899391,0.329877716894,0.337954674332,
	0.346048223144,0.354155688418,0.362274256139,0.370400959631,0.378532665164,
	0.386666056847,0.394797620860,0.402923629255,0.411040123497,0.419142898163,
	0.427227485216,0.435289139399,0.443322825562,0.451323208865,0.459284648789,
	0.467201198505,0.475066610936,0.482874353052,0.490617630325,0.498289422671,
	0.505882533636,0.513389653351,0.520803436667,0.528116594395,0.535321997695,
	0.542412791616,0.549382514313,0.556225216171,0.562935572843,0.569508985994,
	0.575941665227,0.582230685821,0.588374019147,0.594370536271,0.600219979365,
	0.605922911680,0.611480644804,0.616895151140,0.622168966946,0.627305091975,
	0.632306888759,0.637177991502,0.641922218210,0.646543496107,0.651045797716,
	0.655433086230,0.659709275171,0.663878192979,0.667943559384,0.671908968135,
	0.675777874446,0.679553590704,0.683239281972,0.686837967143,0.690352521626,
	0.693785681612,0.697140049494,0.700418100018,0.703622186906,0.706754549510,
	0.709817319626,0.712812528070,0.715742111072,0.718607915984,0.721411707028,
	0.724155171297,0.726839923964,0.729467512904,0.732039422859,0.734557079671,
	0.737021853942,0.739435064521,0.741797981664,0.744111830007,0.746377791268,
	0.748597006747,0.750770579599,0.752899576985,0.754985032003,0.757027945494,
	0.759029287703,0.760989999811,0.762910995359,0.764793161561,0.766637360519,
	0.768444430356,0.770215186272,0.771950421508,0.773650908275,0.775317398592,
	0.776950625081,0.778551301722,0.780120124542,0.781657772263,0.783164906936,
	0.784642174506,0.786090205361,0.787509614858,0.788901003798,0.790264958895,
	0.791602053221,0.792912846604,0.794197886050,0.795457706095,0.796692829183,
	0.797903766001,0.799091015813,0.800255066763,0.801396396192,0.802515470910,
	0.803612747490,0.804688672520,0.805743682867,0.806778205922,0.807792659837,
	0.808787453755,0.809762988031,0.810719654447,0.811657836415,0.812577909183,
	0.813480240024,0.814365188421,0.815233106261,0.816084337994,0.816919220818,
	0.817738084839,0.818541253230,0.819329042394,0.820101762111,0.820859715693,
	0.821603200116,0.822332506173,0.823047918605,0.823749716231,0.824438172087,
	0.825113553538,0.825776122419,0.826426135138,0.827063842809,0.827689491345,
	0.828303321599,0.828905569442,0.829496465894,0.830076237210,0.830645104995,
	0.831203286291,0.831750993683,0.832288435390,0.832815815352,0.833333333334
	}
};

double always_inline epiphone_jr_outclip(double x) {
    double f = fabs(x);
    f = f * epiphone_jr_out_table.istep;
    int i = static_cast<int>(f);
    if (i < 0) {
        f = epiphone_jr_out_table.data[0];
    } else if (i >= epiphone_jr_out_table.size-1) {
        f = epiphone_jr_out_table.data[epiphone_jr_out_table.size-1];
    } else {
    f -= i;
    f = epiphone_jr_out_table.data[i]*(1-f) + epiphone_jr_out_table.data[i+1]*f;
    }
    return copysign(f, x);
}

