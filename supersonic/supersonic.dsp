// generated automatically
// DO NOT MODIFY!
declare id "supersonic";
declare name "Supersonic";
declare category "Extern";
declare shortname "Supersonic";
declare description "Supersonic";

import("stdfaust.lib");

p1 = pre : fi.iir((b0/a0,b1/a0),(a1/a0)) with {
    LogPot(a, x) = ba.if(a, (exp(a * x) - 1) / (exp(a) - 1), x);
    Inverted(b, x) = ba.if(b, 1 - x, x);
    s = 0.993;
    fs = float(ma.SR);
    pre = _;


    Gain = vslider("Gain[name:Gain]", 0.5, 0, 1, 0.01) : Inverted(0) : LogPot(2) : si.smooth(s);

    b0 = -9.11149203164306e-5*Gain*fs - 1.82229840632861e-6*fs;

    b1 = 9.11149203164306e-5*Gain*fs + 1.82229840632861e-6*fs;

    a0 = Gain*(-4.78532903360752e-5*Gain*fs + 4.99109818205264e-5*fs) + 7.81957120982477e-6*fs + 0.00103650226867939;

    a1 = Gain*(4.78532903360752e-5*Gain*fs - 4.99109818205264e-5*fs) - 7.81957120982477e-6*fs + 0.00103650226867939;
};

p2 = pre : fi.iir((b0/a0,b1/a0,b2/a0,b3/a0,b4/a0,b5/a0,b6/a0),(a1/a0,a2/a0,a3/a0,a4/a0,a5/a0,a6/a0)) with {
    LogPot(a, x) = ba.if(a, (exp(a * x) - 1) / (exp(a) - 1), x);
    Inverted(b, x) = ba.if(b, 1 - x, x);
    s = 0.993;
    fs = float(ma.SR);
    pre = _;



    Bass = vslider("Bass[name:Bass]", 0.5, 0, 1, 0.01) : Inverted(0) : si.smooth(s);


    Treble = vslider("Treble[name:Treble]", 0.5, 0, 1, 0.01) : Inverted(0) : si.smooth(s);

    b0 = Bass*(Bass*pow(fs,2)*(fs*(fs*(fs*(6.0490511552153e-29*fs - 1.08118680331922e-23) - 1.11567278400556e-20) + 2.09229116092896e-20) - 9.82556839679967e-33) + pow(fs,2)*(fs*(fs*(fs*(-6.0490511552153e-29*fs + 1.08118680331922e-23) + 1.11551728140517e-20) + 2.25680752872163e-18) + 9.82556839679967e-33)) + Treble*(Bass*(Bass*pow(fs,4)*(fs*(-3.46914825062448e-27*fs - 3.73063872199228e-24) - 2.2779375978716e-22) + pow(fs,3)*(fs*(fs*(3.46914825062448e-27*fs + 3.73063872199228e-24) + 4.58697571582143e-22) + 4.14315081372074e-22)) + Treble*(Bass*(Bass*pow(fs,5)*(1.10009314883802e-27*fs + 1.13378986041865e-24) + pow(fs,4)*(fs*(-1.10009314883802e-27*fs - 1.13378986041865e-24) - 2.27793759787161e-22)) + pow(fs,3)*(fs*(-2.20018629767604e-25*fs - 4.29679382500905e-23) + 2.07157540686037e-22)) + pow(fs,3)*(fs*(6.93829650124896e-25*fs + 3.95860002475e-22) - 4.14315081372073e-22)) + pow(fs,2)*(fs*(fs*(-1.20981023104306e-26*fs + 2.16328174182473e-21) + 4.03207370902736e-19) - 4.97178097646487e-18);

    b1 = Bass*(Bass*pow(fs,2)*(pow(fs,2)*(fs*(-3.62943069312918e-28*fs + 4.32474721327688e-23) + 2.23134556801112e-20) - 1.96511367935993e-32) + pow(fs,2)*(pow(fs,2)*(fs*(3.62943069312918e-28*fs - 4.32474721327688e-23) - 2.23103456281034e-20) + 1.96511367935993e-32)) + Treble*(Bass*(Bass*pow(fs,4)*(fs*(2.08148895037469e-26*fs + 1.49225548879691e-23) + 4.5558751957432e-22) + pow(fs,4)*(fs*(-2.08148895037469e-26*fs - 1.49225548879691e-23) - 9.17395143164286e-22)) + Treble*(Bass*(Bass*pow(fs,5)*(-6.60055889302811e-27*fs - 4.53515944167461e-24) + pow(fs,4)*(fs*(6.60055889302811e-27*fs + 4.53515944167461e-24) + 4.55587519574321e-22)) + pow(fs,4)*(8.80074519070414e-25*fs + 8.59358765001811e-23)) + pow(fs,4)*(-2.77531860049959e-24*fs - 7.9172000495e-22)) + pow(fs,2)*(pow(fs,2)*(4.83924092417224e-26*fs - 4.32656348364945e-21) - 9.94356195292975e-18);

    b2 = Bass*(Bass*pow(fs,2)*(fs*(fs*(fs*(9.07357673282294e-28*fs - 5.4059340165961e-23) + 1.11567278400556e-20) - 6.27687348278688e-20) + 9.82556839679967e-33) + pow(fs,2)*(fs*(fs*(fs*(-9.07357673282294e-28*fs + 5.4059340165961e-23) - 1.11551728140517e-20) - 6.77042258616489e-18) - 9.82556839679967e-33)) + Treble*(Bass*(Bass*pow(fs,4)*(fs*(-5.20372237593672e-26*fs - 1.86531936099614e-23) + 2.2779375978716e-22) + pow(fs,3)*(fs*(fs*(5.20372237593672e-26*fs + 1.86531936099614e-23) - 4.58697571582143e-22) - 1.24294524411622e-21)) + Treble*(Bass*(Bass*pow(fs,5)*(1.65013972325703e-26*fs + 5.66894930209326e-24) + pow(fs,4)*(fs*(-1.65013972325703e-26*fs - 5.66894930209326e-24) + 2.27793759787161e-22)) + pow(fs,3)*(fs*(-1.10009314883802e-24*fs + 4.29679382500905e-23) - 6.21472622058109e-22)) + pow(fs,3)*(fs*(3.46914825062448e-24*fs - 3.95860002475e-22) + 1.24294524411622e-21)) + pow(fs,2)*(fs*(fs*(-6.0490511552153e-26*fs - 2.16328174182473e-21) - 1.20962211270821e-18) + 4.97178097646487e-18);

    b3 = Bass*(Bass*pow(fs,2)*(pow(fs,2)*(-1.20981023104306e-27*pow(fs,2) - 4.46269113602224e-20) + 3.93022735871987e-32) + pow(fs,2)*(pow(fs,2)*(1.20981023104306e-27*pow(fs,2) + 4.46206912562068e-20) - 3.93022735871987e-32)) + Treble*(Bass*(Bass*pow(fs,4)*(6.93829650124896e-26*pow(fs,2) - 9.1117503914864e-22) + pow(fs,4)*(-6.93829650124896e-26*pow(fs,2) + 1.83479028632857e-21)) + Treble*(Bass*(-2.20018629767604e-26*Bass*pow(fs,6) + pow(fs,4)*(2.20018629767604e-26*pow(fs,2) - 9.11175039148642e-22)) - 1.71871753000362e-22*pow(fs,4)) + 1.5834400099e-21*pow(fs,4)) + pow(fs,2)*(8.6531269672989e-21*pow(fs,2) + 1.98871239058595e-17);

    b4 = Bass*(Bass*pow(fs,2)*(fs*(fs*(fs*(9.07357673282294e-28*fs + 5.4059340165961e-23) + 1.11567278400556e-20) + 6.27687348278688e-20) + 9.82556839679967e-33) + pow(fs,2)*(fs*(fs*(fs*(-9.07357673282294e-28*fs - 5.4059340165961e-23) - 1.11551728140517e-20) + 6.77042258616489e-18) - 9.82556839679967e-33)) + Treble*(Bass*(Bass*pow(fs,4)*(fs*(-5.20372237593672e-26*fs + 1.86531936099614e-23) + 2.2779375978716e-22) + pow(fs,3)*(fs*(fs*(5.20372237593672e-26*fs - 1.86531936099614e-23) - 4.58697571582143e-22) + 1.24294524411622e-21)) + Treble*(Bass*(Bass*pow(fs,5)*(1.65013972325703e-26*fs - 5.66894930209326e-24) + pow(fs,4)*(fs*(-1.65013972325703e-26*fs + 5.66894930209326e-24) + 2.27793759787161e-22)) + pow(fs,3)*(fs*(1.10009314883802e-24*fs + 4.29679382500905e-23) + 6.21472622058109e-22)) + pow(fs,3)*(fs*(-3.46914825062448e-24*fs - 3.95860002475e-22) - 1.24294524411622e-21)) + pow(fs,2)*(fs*(fs*(6.0490511552153e-26*fs - 2.16328174182473e-21) + 1.20962211270821e-18) + 4.97178097646487e-18);

    b5 = Bass*(Bass*pow(fs,2)*(pow(fs,2)*(fs*(-3.62943069312918e-28*fs - 4.32474721327688e-23) + 2.23134556801112e-20) - 1.96511367935993e-32) + pow(fs,2)*(pow(fs,2)*(fs*(3.62943069312918e-28*fs + 4.32474721327688e-23) - 2.23103456281034e-20) + 1.96511367935993e-32)) + Treble*(Bass*(Bass*pow(fs,4)*(fs*(2.08148895037469e-26*fs - 1.49225548879691e-23) + 4.5558751957432e-22) + pow(fs,4)*(fs*(-2.08148895037469e-26*fs + 1.49225548879691e-23) - 9.17395143164286e-22)) + Treble*(Bass*(Bass*pow(fs,5)*(-6.60055889302811e-27*fs + 4.53515944167461e-24) + pow(fs,4)*(fs*(6.60055889302811e-27*fs - 4.53515944167461e-24) + 4.55587519574321e-22)) + pow(fs,4)*(-8.80074519070414e-25*fs + 8.59358765001811e-23)) + pow(fs,4)*(2.77531860049959e-24*fs - 7.9172000495e-22)) + pow(fs,2)*(pow(fs,2)*(-4.83924092417224e-26*fs - 4.32656348364945e-21) - 9.94356195292975e-18);

    b6 = Bass*(Bass*pow(fs,2)*(fs*(fs*(fs*(6.0490511552153e-29*fs + 1.08118680331922e-23) - 1.11567278400556e-20) - 2.09229116092896e-20) - 9.82556839679967e-33) + pow(fs,2)*(fs*(fs*(fs*(-6.0490511552153e-29*fs - 1.08118680331922e-23) + 1.11551728140517e-20) - 2.25680752872163e-18) + 9.82556839679967e-33)) + Treble*(Bass*(Bass*pow(fs,4)*(fs*(-3.46914825062448e-27*fs + 3.73063872199228e-24) - 2.2779375978716e-22) + pow(fs,3)*(fs*(fs*(3.46914825062448e-27*fs - 3.73063872199228e-24) + 4.58697571582143e-22) - 4.14315081372074e-22)) + Treble*(Bass*(Bass*pow(fs,5)*(1.10009314883802e-27*fs - 1.13378986041865e-24) + pow(fs,4)*(fs*(-1.10009314883802e-27*fs + 1.13378986041865e-24) - 2.27793759787161e-22)) + pow(fs,3)*(fs*(2.20018629767604e-25*fs - 4.29679382500905e-23) - 2.07157540686037e-22)) + pow(fs,3)*(fs*(-6.93829650124896e-25*fs + 3.95860002475e-22) + 4.14315081372073e-22)) + pow(fs,2)*(fs*(fs*(1.20981023104306e-26*fs + 2.16328174182473e-21) - 4.03207370902736e-19) - 4.97178097646487e-18);

    a0 = Bass*(Bass*(fs*(fs*(fs*(fs*(fs*(-3.62872998720424e-28*fs - 2.52344661631536e-24) - 2.18295349844616e-21) - 3.53221173327878e-19) - 1.60655994099041e-17) - 2.15340311955366e-17) + 1.01125550937485e-29) + fs*(fs*(fs*(fs*(fs*(3.62872998720424e-28*fs + 2.52344661631536e-24) + 2.18476286885277e-21) + 8.46626752991924e-20) - 3.4560962962513e-17) - 2.32272470645234e-15)) + Treble*(Bass*(Bass*fs*(fs*(fs*(fs*(fs*(8.7797693860085e-29*fs + 1.73769177200289e-25) + 5.74453140263249e-23) + 6.45410868622137e-21) + 2.34447194587753e-19) - 1.01125550937485e-33) + fs*(fs*(fs*(fs*(fs*(-8.7797693860085e-29*fs - 1.73769177200289e-25) - 8.79647617632315e-23) - 1.24168320637625e-20) - 5.2738887295382e-19) - 4.26416459317574e-19)) + Treble*(Bass*(Bass*pow(fs,2)*(fs*(fs*(fs*(1.91969658146125e-28*fs + 1.85580923728473e-25) + 2.96412666813708e-23) + 1.28417029350963e-21) - 5.56190530156167e-35) + fs*(fs*(fs*(fs*(fs*(-1.91969658146125e-28*fs - 1.85580923728473e-25) - 2.74055975769674e-24) + 3.78141066792101e-21) + 2.34447194587753e-19) - 1.01125550937485e-33)) + fs*(fs*(fs*(fs*(-3.8393931629225e-26*fs - 4.35717847353048e-23) - 7.2517402922623e-21) - 3.2657449261887e-19) - 2.13208229658786e-19)) + fs*(fs*(fs*(fs*(-1.7559538772017e-26*fs - 7.01275323109138e-24) - 6.6938264041103e-22) - 8.97810027051546e-21) + 4.26416459317575e-19)) + fs*(fs*(fs*(fs*(7.25745997440848e-26*fs + 4.83270952225433e-22) + 4.80207616341231e-19) + 7.98442414323855e-17) + 3.68004528661724e-15) + 5.11699751181088e-15;

    a1 = Bass*(Bass*(fs*(fs*(pow(fs,2)*(fs*(2.17723799232254e-27*fs + 1.00937864652614e-23) + 4.36590699689231e-21) - 3.21311988198083e-17) - 8.61361247821464e-17) + 6.06753305624909e-29) + fs*(fs*(pow(fs,2)*(fs*(-2.17723799232254e-27*fs - 1.00937864652614e-23) - 4.36952573770555e-21) - 6.91219259250261e-17) - 9.29089882580934e-15)) + Treble*(Bass*(Bass*fs*(fs*(pow(fs,2)*(fs*(-5.2678616316051e-28*fs - 6.95076708801156e-25) - 1.1489062805265e-22) + 4.68894389175505e-19) - 4.0450220374994e-33) + fs*(fs*(pow(fs,2)*(fs*(5.2678616316051e-28*fs + 6.95076708801156e-25) + 1.75929523526463e-22) - 1.05477774590764e-18) - 1.70566583727029e-18)) + Treble*(Bass*(Bass*pow(fs,2)*(pow(fs,2)*(fs*(-1.15181794887675e-27*fs - 7.42323694913893e-25) - 5.92825333627416e-23) - 1.11238106031233e-34) + fs*(fs*(pow(fs,2)*(fs*(1.15181794887675e-27*fs + 7.42323694913893e-25) + 5.48111951539348e-24) + 4.68894389175506e-19) - 4.0450220374994e-33)) + fs*(fs*(pow(fs,2)*(1.535757265169e-25*fs + 8.71435694706097e-23) - 6.5314898523774e-19) - 8.52832918635145e-19)) + fs*(fs*(pow(fs,2)*(7.0238155088068e-26*fs + 1.40255064621828e-23) - 1.79562005410309e-20) + 1.7056658372703e-18)) + fs*(fs*(pow(fs,2)*(-2.90298398976339e-25*fs - 9.66541904450867e-22) + 1.59688482864771e-16) + 1.4720181146469e-14) + 3.07019850708653e-14;

    a2 = Bass*(Bass*(fs*(fs*(fs*(fs*(fs*(-5.44309498080636e-27*fs - 1.26172330815768e-23) + 2.18295349844616e-21) + 1.05966351998363e-18) + 1.60655994099041e-17) - 1.07670155977683e-16) + 1.51688326406227e-28) + fs*(fs*(fs*(fs*(fs*(5.44309498080636e-27*fs + 1.26172330815768e-23) - 2.18476286885277e-21) - 2.53988025897577e-19) + 3.4560962962513e-17) - 1.16136235322617e-14)) + Treble*(Bass*(Bass*fs*(fs*(fs*(fs*(fs*(1.31696540790127e-27*fs + 8.68845886001445e-25) - 5.74453140263249e-23) - 1.93623260586641e-20) - 2.34447194587753e-19) - 5.05627754687424e-33) + fs*(fs*(fs*(fs*(fs*(-1.31696540790127e-27*fs - 8.68845886001445e-25) + 8.79647617632315e-23) + 3.72504961912875e-20) + 5.2738887295382e-19) - 2.13208229658787e-18)) + Treble*(Bass*(Bass*pow(fs,2)*(fs*(fs*(fs*(2.87954487219187e-27*fs + 9.27904618642366e-25) - 2.96412666813708e-23) - 3.85251088052888e-21) + 5.56190530156167e-35) + fs*(fs*(fs*(fs*(fs*(-2.87954487219187e-27*fs - 9.27904618642366e-25) + 2.74055975769674e-24) - 1.1344232003763e-20) - 2.34447194587753e-19) - 5.05627754687424e-33)) + fs*(fs*(fs*(fs*(-1.91969658146125e-25*fs + 4.35717847353048e-23) + 2.17552208767869e-20) + 3.2657449261887e-19) - 1.06604114829393e-18)) + fs*(fs*(fs*(fs*(-8.7797693860085e-26*fs + 7.01275323109138e-24) + 2.00814792123309e-21) + 8.97810027051546e-21) + 2.13208229658787e-18)) + fs*(fs*(fs*(fs*(3.62872998720424e-25*fs - 4.83270952225433e-22) - 1.44062284902369e-18) - 7.98442414323855e-17) + 1.84002264330862e-14) + 7.67549626771633e-14;

    a3 = Bass*(Bass*(pow(fs,2)*(pow(fs,2)*(7.25745997440848e-27*pow(fs,2) - 8.73181399378463e-21) + 6.42623976396166e-17) + 2.0225110187497e-28) + pow(fs,2)*(pow(fs,2)*(-7.25745997440848e-27*pow(fs,2) + 8.73905147541109e-21) + 1.38243851850052e-16)) + Treble*(Bass*(Bass*pow(fs,2)*(pow(fs,2)*(-1.7559538772017e-27*pow(fs,2) + 2.297812561053e-22) - 9.37788778351011e-19) + pow(fs,2)*(pow(fs,2)*(1.7559538772017e-27*pow(fs,2) - 3.51859047052926e-22) + 2.10955549181528e-18)) + Treble*(Bass*(Bass*pow(fs,2)*(pow(fs,2)*(-3.8393931629225e-27*pow(fs,2) + 1.18565066725483e-22) + 2.22476212062467e-34) + pow(fs,2)*(pow(fs,2)*(3.8393931629225e-27*pow(fs,2) - 1.0962239030787e-23) - 9.37788778351013e-19)) + pow(fs,2)*(-1.74287138941219e-22*pow(fs,2) + 1.30629797047548e-18)) + pow(fs,2)*(-2.80510129243655e-23*pow(fs,2) + 3.59124010820619e-20)) + pow(fs,2)*(1.93308380890173e-21*pow(fs,2) - 3.19376965729542e-16) + 1.02339950236218e-13;

    a4 = Bass*(Bass*(fs*(fs*(fs*(fs*(fs*(-5.44309498080636e-27*fs + 1.26172330815768e-23) + 2.18295349844616e-21) - 1.05966351998363e-18) + 1.60655994099041e-17) + 1.07670155977683e-16) + 1.51688326406227e-28) + fs*(fs*(fs*(fs*(fs*(5.44309498080636e-27*fs - 1.26172330815768e-23) - 2.18476286885277e-21) + 2.53988025897577e-19) + 3.4560962962513e-17) + 1.16136235322617e-14)) + Treble*(Bass*(Bass*fs*(fs*(fs*(fs*(fs*(1.31696540790127e-27*fs - 8.68845886001445e-25) - 5.74453140263249e-23) + 1.93623260586641e-20) - 2.34447194587753e-19) + 5.05627754687424e-33) + fs*(fs*(fs*(fs*(fs*(-1.31696540790127e-27*fs + 8.68845886001445e-25) + 8.79647617632315e-23) - 3.72504961912875e-20) + 5.2738887295382e-19) + 2.13208229658787e-18)) + Treble*(Bass*(Bass*pow(fs,2)*(fs*(fs*(fs*(2.87954487219187e-27*fs - 9.27904618642366e-25) - 2.96412666813708e-23) + 3.85251088052888e-21) + 5.56190530156167e-35) + fs*(fs*(fs*(fs*(fs*(-2.87954487219187e-27*fs + 9.27904618642366e-25) + 2.74055975769674e-24) + 1.1344232003763e-20) - 2.34447194587753e-19) + 5.05627754687424e-33)) + fs*(fs*(fs*(fs*(1.91969658146125e-25*fs + 4.35717847353048e-23) - 2.17552208767869e-20) + 3.2657449261887e-19) + 1.06604114829393e-18)) + fs*(fs*(fs*(fs*(8.7797693860085e-26*fs + 7.01275323109138e-24) - 2.00814792123309e-21) + 8.97810027051546e-21) - 2.13208229658787e-18)) + fs*(fs*(fs*(fs*(-3.62872998720424e-25*fs - 4.83270952225433e-22) + 1.44062284902369e-18) - 7.98442414323855e-17) - 1.84002264330862e-14) + 7.67549626771633e-14;

    a5 = Bass*(Bass*(fs*(fs*(pow(fs,2)*(fs*(2.17723799232254e-27*fs - 1.00937864652614e-23) + 4.36590699689231e-21) - 3.21311988198083e-17) + 8.61361247821464e-17) + 6.06753305624909e-29) + fs*(fs*(pow(fs,2)*(fs*(-2.17723799232254e-27*fs + 1.00937864652614e-23) - 4.36952573770555e-21) - 6.91219259250261e-17) + 9.29089882580934e-15)) + Treble*(Bass*(Bass*fs*(fs*(pow(fs,2)*(fs*(-5.2678616316051e-28*fs + 6.95076708801156e-25) - 1.1489062805265e-22) + 4.68894389175505e-19) + 4.0450220374994e-33) + fs*(fs*(pow(fs,2)*(fs*(5.2678616316051e-28*fs - 6.95076708801156e-25) + 1.75929523526463e-22) - 1.05477774590764e-18) + 1.70566583727029e-18)) + Treble*(Bass*(Bass*pow(fs,2)*(pow(fs,2)*(fs*(-1.15181794887675e-27*fs + 7.42323694913893e-25) - 5.92825333627416e-23) - 1.11238106031233e-34) + fs*(fs*(pow(fs,2)*(fs*(1.15181794887675e-27*fs - 7.42323694913893e-25) + 5.48111951539348e-24) + 4.68894389175506e-19) + 4.0450220374994e-33)) + fs*(fs*(pow(fs,2)*(-1.535757265169e-25*fs + 8.71435694706097e-23) - 6.5314898523774e-19) + 8.52832918635145e-19)) + fs*(fs*(pow(fs,2)*(-7.0238155088068e-26*fs + 1.40255064621828e-23) - 1.79562005410309e-20) - 1.7056658372703e-18)) + fs*(fs*(pow(fs,2)*(2.90298398976339e-25*fs - 9.66541904450867e-22) + 1.59688482864771e-16) - 1.4720181146469e-14) + 3.07019850708653e-14;

    a6 = Bass*(Bass*(fs*(fs*(fs*(fs*(fs*(-3.62872998720424e-28*fs + 2.52344661631536e-24) - 2.18295349844616e-21) + 3.53221173327878e-19) - 1.60655994099041e-17) + 2.15340311955366e-17) + 1.01125550937485e-29) + fs*(fs*(fs*(fs*(fs*(3.62872998720424e-28*fs - 2.52344661631536e-24) + 2.18476286885277e-21) - 8.46626752991924e-20) - 3.4560962962513e-17) + 2.32272470645234e-15)) + Treble*(Bass*(Bass*fs*(fs*(fs*(fs*(fs*(8.7797693860085e-29*fs - 1.73769177200289e-25) + 5.74453140263249e-23) - 6.45410868622137e-21) + 2.34447194587753e-19) + 1.01125550937485e-33) + fs*(fs*(fs*(fs*(fs*(-8.7797693860085e-29*fs + 1.73769177200289e-25) - 8.79647617632315e-23) + 1.24168320637625e-20) - 5.2738887295382e-19) + 4.26416459317574e-19)) + Treble*(Bass*(Bass*pow(fs,2)*(fs*(fs*(fs*(1.91969658146125e-28*fs - 1.85580923728473e-25) + 2.96412666813708e-23) - 1.28417029350963e-21) - 5.56190530156167e-35) + fs*(fs*(fs*(fs*(fs*(-1.91969658146125e-28*fs + 1.85580923728473e-25) - 2.74055975769674e-24) - 3.78141066792101e-21) + 2.34447194587753e-19) + 1.01125550937485e-33)) + fs*(fs*(fs*(fs*(3.8393931629225e-26*fs - 4.35717847353048e-23) + 7.2517402922623e-21) - 3.2657449261887e-19) + 2.13208229658786e-19)) + fs*(fs*(fs*(fs*(1.7559538772017e-26*fs - 7.01275323109138e-24) + 6.6938264041103e-22) - 8.97810027051546e-21) - 4.26416459317575e-19)) + fs*(fs*(fs*(fs*(-7.25745997440848e-26*fs + 4.83270952225433e-22) - 4.80207616341231e-19) + 7.98442414323855e-17) - 3.68004528661724e-15) + 5.11699751181088e-15;
};

p3 = pre : fi.iir((b0/a0,b1/a0,b2/a0,b3/a0,b4/a0,b5/a0),(a1/a0,a2/a0,a3/a0,a4/a0,a5/a0)) : supersonic_clip with {
    LogPot(a, x) = ba.if(a, (exp(a * x) - 1) / (exp(a) - 1), x);
    Inverted(b, x) = ba.if(b, 1 - x, x);
    s = 0.993;
    fs = float(ma.SR);
    pre = _;


    b0 = fs*(fs*(fs*(fs*(2.20682184684432e-26*fs + 8.17344554235261e-19) + 1.15906710571025e-16) + 4.2235930719266e-15) + 7.76975700660911e-14) + 1.26979539981828e-12;

    b1 = fs*(fs*(fs*(fs*(-1.10341092342216e-25*fs - 2.45203366270578e-18) - 1.15906710571025e-16) + 4.2235930719266e-15) + 2.33092710198273e-13) + 6.34897699909141e-12;

    b2 = fs*(fs*(fs*(fs*(2.20682184684432e-25*fs + 1.63468910847052e-18) - 2.31813421142051e-16) - 8.44718614385319e-15) + 1.55395140132182e-13) + 1.26979539981828e-11;

    b3 = fs*(fs*(fs*(fs*(-2.20682184684432e-25*fs + 1.63468910847052e-18) + 2.31813421142051e-16) - 8.44718614385319e-15) - 1.55395140132182e-13) + 1.26979539981828e-11;

    b4 = fs*(fs*(fs*(fs*(1.10341092342216e-25*fs - 2.45203366270578e-18) + 1.15906710571025e-16) + 4.2235930719266e-15) - 2.33092710198273e-13) + 6.34897699909141e-12;

    b5 = fs*(fs*(fs*(fs*(-2.20682184684432e-26*fs + 8.17344554235261e-19) - 1.15906710571025e-16) + 4.2235930719266e-15) - 7.76975700660911e-14) + 1.26979539981828e-12;

    a0 = fs*(fs*(fs*(fs*(5.00590822563103e-27*fs + 1.85439561729349e-19) + 1.29213045864058e-16) + 1.91675735640238e-14) + 9.77706930886932e-13) + 1.59787065310447e-11;

    a1 = fs*(fs*(fs*(fs*(-2.50295411281552e-26*fs - 5.56318685188047e-19) - 1.29213045864058e-16) + 1.91675735640238e-14) + 2.9331207926608e-12) + 7.98935326552235e-11;

    a2 = fs*(fs*(fs*(fs*(5.00590822563103e-26*fs + 3.70879123458698e-19) - 2.58426091728115e-16) - 3.83351471280476e-14) + 1.95541386177386e-12) + 1.59787065310447e-10;

    a3 = fs*(fs*(fs*(fs*(-5.00590822563103e-26*fs + 3.70879123458698e-19) + 2.58426091728115e-16) - 3.83351471280476e-14) - 1.95541386177386e-12) + 1.59787065310447e-10;

    a4 = fs*(fs*(fs*(fs*(2.50295411281552e-26*fs - 5.56318685188047e-19) + 1.29213045864058e-16) + 1.91675735640238e-14) - 2.9331207926608e-12) + 7.98935326552235e-11;

    a5 = fs*(fs*(fs*(fs*(-5.00590822563103e-27*fs + 1.85439561729349e-19) - 1.29213045864058e-16) + 1.91675735640238e-14) - 9.77706930886932e-13) + 1.59787065310447e-11;
};

    supersonic_clip = ffunction(float supersonicclip(float), "supersonic_table.h", "");

p4 = pre : fi.iir((b0/a0,b1/a0),(a1/a0)) with {
    LogPot(a, x) = ba.if(a, (exp(a * x) - 1) / (exp(a) - 1), x);
    Inverted(b, x) = ba.if(b, 1 - x, x);
    s = 0.993;
    fs = float(ma.SR);
    pre = _;



    Volume = vslider("Volume[name:Volume]", 0.5, 0, 1, 0.01) : Inverted(0) : si.smooth(s);

    b0 = Volume*(0.488938774271564*Volume - 1.61349795509616) - 0.166239183252332;

    b1 = Volume*(0.488938774271564*Volume - 1.61349795509616) - 0.166239183252332;

    a0 = Volume*(Volume*(-2.24914085283282e-6*fs - 0.112461932029384) + 2.6891901501262e-6*fs - 0.99009478393055) + 2.91410423540948e-7*fs + 1.47162430127362;

    a1 = Volume*(Volume*(2.24914085283282e-6*fs - 0.112461932029384) - 2.6891901501262e-6*fs - 0.99009478393055) - 2.91410423540948e-7*fs + 1.47162430127362;
};

p5 = pre : fi.iir((b0/a0,b1/a0,b2/a0,b3/a0,b4/a0,b5/a0,b6/a0,b7/a0,b8/a0),(a1/a0,a2/a0,a3/a0,a4/a0,a5/a0,a6/a0,a7/a0,a8/a0)) with {
    LogPot(a, x) = ba.if(a, (exp(a * x) - 1) / (exp(a) - 1), x);
    Inverted(b, x) = ba.if(b, 1 - x, x);
    s = 0.993;
    fs = float(ma.SR);
    pre = _;


    b0 = pow(fs,2)*(fs*(3.22912277501057e-21*fs + 6.38442519444497e-17) + 2.78116542918484e-14);

    b1 = pow(fs,2)*(1.27688503888899e-16*fs + 1.11246617167394e-13);

    b2 = pow(fs,2)*(fs*(-1.29164911000423e-20*fs - 1.27688503888899e-16) + 1.11246617167394e-13);

    b3 = pow(fs,2)*(-3.83065511666698e-16*fs - 1.11246617167394e-13);

    b4 = pow(fs,2)*(1.93747366500634e-20*pow(fs,2) - 2.78116542918484e-13);

    b5 = pow(fs,2)*(3.83065511666698e-16*fs - 1.11246617167394e-13);

    b6 = pow(fs,2)*(fs*(-1.29164911000423e-20*fs + 1.27688503888899e-16) + 1.11246617167394e-13);

    b7 = pow(fs,2)*(-1.27688503888899e-16*fs + 1.11246617167394e-13);

    b8 = pow(fs,2)*(fs*(3.22912277501057e-21*fs - 6.38442519444497e-17) + 2.78116542918484e-14);

    a0 = fs*(fs*(fs*(fs*(fs*(fs*(fs*(1.03166468453596e-39*fs + 3.18357714768969e-34) + 3.29454001779334e-29) + 1.23122315470738e-24) + 1.03357108589895e-20) + 1.12318322365961e-16) + 3.48098546144324e-14) + 1.0201961576646e-11) + 7.23454404936606e-10;

    a1 = fs*(fs*(fs*(pow(fs,2)*(fs*(fs*(-8.25331747628768e-39*fs - 1.91014628861382e-33) - 1.31781600711734e-28) - 2.46244630941476e-24) + 2.24636644731921e-16) + 1.3923941845773e-13) + 6.12117694598759e-11) + 5.78763523949285e-9;

    a2 = fs*(fs*(fs*(fs*(fs*(fs*(fs*(2.88866111670069e-38*fs + 4.45700800676557e-33) + 1.31781600711734e-28) - 2.46244630941476e-24) - 4.1342843435958e-20) - 2.24636644731921e-16) + 1.3923941845773e-13) + 1.42827462073044e-10) + 2.0256723338225e-8;

    a3 = fs*(fs*(fs*(pow(fs,2)*(fs*(fs*(-5.77732223340138e-38*fs - 4.45700800676557e-33) + 1.31781600711734e-28) + 7.38733892824429e-24) - 6.73909934195763e-16) - 1.3923941845773e-13) + 1.42827462073044e-10) + 4.05134466764499e-8;

    a4 = pow(fs,2)*(pow(fs,2)*(pow(fs,2)*(7.22165279175172e-38*pow(fs,2) - 3.29454001779334e-28) + 6.20142651539371e-20) - 3.48098546144324e-13) + 5.06418083455624e-8;

    a5 = fs*(fs*(fs*(pow(fs,2)*(fs*(fs*(-5.77732223340138e-38*fs + 4.45700800676557e-33) + 1.31781600711734e-28) - 7.38733892824429e-24) + 6.73909934195763e-16) - 1.3923941845773e-13) - 1.42827462073044e-10) + 4.05134466764499e-8;

    a6 = fs*(fs*(fs*(fs*(fs*(fs*(fs*(2.88866111670069e-38*fs - 4.45700800676557e-33) + 1.31781600711734e-28) + 2.46244630941476e-24) - 4.1342843435958e-20) + 2.24636644731921e-16) + 1.3923941845773e-13) - 1.42827462073044e-10) + 2.0256723338225e-8;

    a7 = fs*(fs*(fs*(pow(fs,2)*(fs*(fs*(-8.25331747628768e-39*fs + 1.91014628861382e-33) - 1.31781600711734e-28) + 2.46244630941476e-24) - 2.24636644731921e-16) + 1.3923941845773e-13) - 6.12117694598759e-11) + 5.78763523949285e-9;

    a8 = fs*(fs*(fs*(fs*(fs*(fs*(fs*(1.03166468453596e-39*fs - 3.18357714768969e-34) + 3.29454001779334e-29) - 1.23122315470738e-24) + 1.03357108589895e-20) - 1.12318322365961e-16) + 3.48098546144324e-14) - 1.0201961576646e-11) + 7.23454404936606e-10;
};

process =  p1 : p2 : p3 : p4 : p5 ;