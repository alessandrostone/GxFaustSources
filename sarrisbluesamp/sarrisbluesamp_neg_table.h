
// sarrisbluesamp_neg_table generated by DK/circ_table_gen.py -- do not modify manually

 // variables used
 // --sig_max  -1.400000
 // --table_div  19.034723
 // --table_op  1.000000

struct tablesarrisbluesamp_neg { // 1-dimensional function table
    float low;
    float high;
    float istep;
    int size;
    float data[];
};

template <int tab_size>
struct tablesarrisbluesamp_neg_imp {
    float low;
    float high;
    float istep;
    int size;
    float data[tab_size];
    operator tablesarrisbluesamp_neg&() const { return *(tablesarrisbluesamp_neg*)this; }
};

 static tablesarrisbluesamp_neg_imp<200> sarrisbluesamp_neg_table __rt_data = {
	0,0.636794,142.143,200, {
	0.000000000000,0.004550289093,0.008595472251,0.012244196018,0.015582423271,
	0.018678229676,0.021585563671,0.024347201358,0.026997073585,0.029562101807,
	0.032063648545,0.034518664754,0.036940598370,0.039340114361,0.041725665827,
	0.044103947226,0.046480254273,0.048858769848,0.051242791233,0.053634910771,
	0.056037159564,0.058451121788,0.060878025664,0.063318815884,0.065774211268,
	0.068244750686,0.070730829644,0.073232729430,0.075750640343,0.078284680210,
	0.080834909152,0.083401341351,0.085983954445,0.088582697017,0.091197494571,
	0.093828254302,0.096474868907,0.099137219617,0.101815178631,0.104508611050,
	0.107217376424,0.109941329993,0.112680323668,0.115434206823,0.118202826928,
	0.120986030047,0.123783661243,0.126595564900,0.129421584978,0.132261565218,
	0.135115349306,0.137982781001,0.140863704241,0.143757963226,0.146665402481,
	0.149585866911,0.152519201838,0.155465253038,0.158423866765,0.161394889768,
	0.164378169311,0.167373553181,0.170380889698,0.173400027725,0.176430816666,
	0.179473106478,0.182526747665,0.185591591283,0.188667488943,0.191754292805,
	0.194851855582,0.197960030539,0.201078671487,0.204207632789,0.207346769350,
	0.210495936622,0.213654990598,0.216823787813,0.220002185339,0.223190040784,
	0.226387212289,0.229593558529,0.232808938707,0.236033212552,0.239266240319,
	0.242507882787,0.245758001253,0.249016457533,0.252283113959,0.255557833377,
	0.258840479146,0.262130915130,0.265429005704,0.268734615748,0.272047610642,
	0.275367856270,0.278695219014,0.282029565751,0.285370763855,0.288718681191,
	0.292073186115,0.295434147474,0.298801434598,0.302174917304,0.305554465893,
	0.308939951145,0.312331244322,0.315728217160,0.319130741873,0.322538691150,
	0.325951938150,0.329370356503,0.332793820310,0.336222204136,0.339655383014,
	0.343093232440,0.346535628373,0.349982447233,0.353433565899,0.356888861708,
	0.360348212454,0.363811496385,0.367278592205,0.370749379069,0.374223736582,
	0.377701544799,0.381182684226,0.384667035815,0.388154480961,0.391644901509,
	0.395138179745,0.398634198397,0.402132840637,0.405633990075,0.409137530763,
	0.412643347190,0.416151324284,0.419661347407,0.423173302361,0.426687075381,
	0.430202553135,0.433719622728,0.437238171694,0.440758088002,0.444279260051,
	0.447801576673,0.451324927127,0.454849201105,0.458374288726,0.461900080540,
	0.465426467524,0.468953341083,0.472480593050,0.476008115686,0.479535801680,
	0.483063544144,0.486591236622,0.490118773080,0.493646047914,0.497172955945,
	0.500699392420,0.504225253013,0.507750433825,0.511274831382,0.514798342639,
	0.518320864977,0.521842296203,0.525362534553,0.528881478690,0.532399027706,
	0.535915081120,0.539429538882,0.542942301370,0.546453269392,0.549962344188,
	0.553469427427,0.556974421212,0.560477228077,0.563977750990,0.567475893353,
	0.570971559004,0.574464652215,0.577955077695,0.581442740592,0.584927546493,
	0.588409401422,0.591888211848,0.595363884678,0.598836327265,0.602305447406,
	0.605771153343,0.609233353765,0.612691957812,0.616146875069,0.619598015578,
	0.623045289830,0.626488608771,0.629927883804,0.633363026789,0.636793950045
	}
};

double always_inline sarrisbluesamp_negclip(double x) {
    double f = fabs(x);
    f = f * sarrisbluesamp_neg_table.istep;
    int i = static_cast<int>(f);
    if (i < 0) {
        f = sarrisbluesamp_neg_table.data[0];
    } else if (i >= sarrisbluesamp_neg_table.size-1) {
        f = sarrisbluesamp_neg_table.data[sarrisbluesamp_neg_table.size-1];
    } else {
    f -= i;
    f = sarrisbluesamp_neg_table.data[i]*(1-f) + sarrisbluesamp_neg_table.data[i+1]*f;
    }
    return copysign(f, x);
}

