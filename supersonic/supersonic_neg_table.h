
// supersonic_neg_table generated by DK/circ_table_gen.py -- do not modify manually

 // variables used
 // --sig_max  -2.000000
 // --table_div  3.719833
 // --table_op  1.000000

struct tablesupersonic_neg { // 1-dimensional function table
    float low;
    float high;
    float istep;
    int size;
    float data[];
};

template <int tab_size>
struct tablesupersonic_neg_imp {
    float low;
    float high;
    float istep;
    int size;
    float data[tab_size];
    operator tablesupersonic_neg&() const { return *(tablesupersonic_neg*)this; }
};

 static tablesupersonic_neg_imp<200> supersonic_neg_table __rt_data = {
	0,-0.833333,99.5,200, {
	0.000000000000,-0.011840180780,-0.023544118906,-0.035113294970,-0.046549131122,
	-0.057853075695,-0.069026519486,-0.080070879236,-0.090987515003,-0.101777812716,
	-0.112443102362,-0.122984739564,-0.133404024859,-0.143702284325,-0.153880789468,
	-0.163940837364,-0.173883671154,-0.183710559481,-0.193422717621,-0.203021386068,
	-0.212507753050,-0.221883031564,-0.231148382809,-0.240304992862,-0.249353996573,
	-0.258296553616,-0.267133772981,-0.275866788056,-0.284496682406,-0.293024563976,
	-0.301451491245,-0.309778546986,-0.318006765098,-0.326137203605,-0.334170872249,
	-0.342108804729,-0.349951987041,-0.357701428973,-0.365358093183,-0.372922965958,
	-0.380396987019,-0.387781119556,-0.395076280753,-0.402283411103,-0.409403405647,
	-0.416437182576,-0.423385615183,-0.430249599750,-0.437029988209,-0.443727655325,
	-0.450343432056,-0.456878172040,-0.463332685646,-0.469707805772,-0.476004322580,
	-0.482223048616,-0.488364754215,-0.494430231957,-0.500420232732,-0.506335529535,
	-0.512176854191,-0.517944960492,-0.523640561580,-0.529264392425,-0.534817147860,
	-0.540299544415,-0.545712258993,-0.551055990065,-0.556331396980,-0.561539160525,
	-0.566679922871,-0.571754347505,-0.576763059791,-0.581706706292,-0.586585895942,
	-0.591401258755,-0.596153387607,-0.600842896340,-0.605470362145,-0.610036383064,
	-0.614541520976,-0.618986358497,-0.623371442561,-0.627697340732,-0.631964585370,
	-0.636173729356,-0.640325290842,-0.644419808397,-0.648457786332,-0.652439749272,
	-0.656366188050,-0.660237613716,-0.664054503987,-0.667817356702,-0.671526636825,
	-0.675182829346,-0.678786386836,-0.682337781798,-0.685837454766,-0.689285866117,
	-0.692683444704,-0.696030639134,-0.699327866931,-0.702575565289,-0.705774140756,
	-0.708924019463,-0.712025597332,-0.715079289781,-0.718085482451,-0.721044580397,
	-0.723956959323,-0.726823014263,-0.729643111328,-0.732417635873,-0.735146944752,
	-0.737831413984,-0.740471391499,-0.743067244315,-0.745619311772,-0.748127952221,
	-0.750593496740,-0.753016295342,-0.755396671170,-0.757734966225,-0.760031496037,
	-0.762286594918,-0.764500571104,-0.766673751535,-0.768806437468,-0.770898948789,
	-0.772951580086,-0.774964644501,-0.776938430258,-0.778873244064,-0.780769368082,
	-0.782627102885,-0.784446724873,-0.786228528781,-0.787972785542,-0.789679784347,
	-0.791349790946,-0.792983089273,-0.794579940182,-0.796140622633,-0.797665392858,
	-0.799154525121,-0.800608271303,-0.802026901243,-0.803410662740,-0.804759821470,
	-0.806074621407,-0.807355324326,-0.808602170628,-0.809815418437,-0.810995304828,
	-0.812142084517,-0.813255991491,-0.814337277295,-0.815386173059,-0.816402927383,
	-0.817387768763,-0.818340943074,-0.819262676389,-0.820153212070,-0.821012773968,
	-0.821841603132,-0.822639921386,-0.823407967655,-0.824145961914,-0.824854141141,
	-0.825532723634,-0.826181944585,-0.826802020768,-0.827393185740,-0.827955654889,
	-0.828489660265,-0.828995415990,-0.829473152717,-0.829923083398,-0.830345437369,
	-0.830740426475,-0.831108278788,-0.831449205066,-0.831763432110,-0.832051169553,
	-0.832312642844,-0.832548060343,-0.832757645923,-0.832941606326,-0.833100163318,
	-0.833233521198,-0.833341898259,-0.833425493822,-0.833484516702,-0.833519136508,
	-0.833529542737,-0.833515941006,-0.833478560390,-0.833417614731,-0.833333333333
	}
};

double always_inline supersonic_negclip(double x) {
    double f = fabs(x);
    f = f * supersonic_neg_table.istep;
    int i = static_cast<int>(f);
    if (i < 0) {
        f = supersonic_neg_table.data[0];
    } else if (i >= supersonic_neg_table.size-1) {
        f = supersonic_neg_table.data[supersonic_neg_table.size-1];
    } else {
    f -= i;
    f = supersonic_neg_table.data[i]*(1-f) + supersonic_neg_table.data[i+1]*f;
    }
    return copysign(f, x);
}

