
// epic_table generated by DK/circ_table_gen.py -- do not modify manually

 // variables in use
 // max_sig = 1.400000
 // step operator = 0.714286
 // divider = 1.000000

struct tableepic { // 1-dimensional function table
    float low;
    float high;
    float istep;
    int size;
    float data[];
};

template <int tab_size>
struct tableepic_imp {
    float low;
    float high;
    float istep;
    int size;
    float data[tab_size];
    operator tableepic&() const { return *(tableepic*)this; }
};

 static tableepic_imp<200> epic_table __rt_data = {
	0,0.731708,142.143,200, {
	0.000000000000,0.002109547238,0.004264039629,0.006462511578,0.008703962218,
	0.010987463648,0.013312076453,0.015676894273,0.018081017397,0.020523591860,
	0.023003758357,0.025520689620,0.028073570006,0.030661603525,0.033284014855,
	0.035940039716,0.038628939534,0.041349977076,0.044102448702,0.046885661809,
	0.049698926289,0.052541575686,0.055412971052,0.058312467083,0.061239438402,
	0.064193279833,0.067173395654,0.070179201812,0.073210134056,0.076265628987,
	0.079345139486,0.082448135991,0.085574098851,0.088722517538,0.091892890715,
	0.095084735564,0.098297571902,0.101530929948,0.104784356632,0.108057406190,
	0.111349642111,0.114660638844,0.117989976124,0.121337243835,0.124702051661,
	0.128083996705,0.131482704303,0.134897801251,0.138328918957,0.141775707306,
	0.145237805586,0.148714875813,0.152206588105,0.155712615490,0.159232629250,
	0.162766324204,0.166313397416,0.169873543528,0.173446471510,0.177031889449,
	0.180629530409,0.184239109264,0.187860366183,0.191493031273,0.195136855729,
	0.198791575651,0.202456968663,0.206132776453,0.209818769912,0.213514721867,
	0.217220407281,0.220935603504,0.224660098349,0.228393683271,0.232136154267,
	0.235887308193,0.239646942008,0.243414874495,0.247190916706,0.250974874566,
	0.254766583524,0.258565855728,0.262372524660,0.266186421001,0.270007377244,
	0.273835239099,0.277669845073,0.281511042449,0.285358675071,0.289212606313,
	0.293072682670,0.296938772178,0.300810726880,0.304688423535,0.308571712936,
	0.312460483958,0.316354607494,0.320253947591,0.324158396337,0.328067832483,
	0.331982137747,0.335901205019,0.339824914939,0.343753165066,0.347685850132,
	0.351622861684,0.355564104622,0.359509485945,0.363458888452,0.367412230240,
	0.371369428082,0.375330373418,0.379294990778,0.383263181634,0.387234869650,
	0.391209976719,0.395188404054,0.399170089791,0.403154952417,0.407142900629,
	0.411133886963,0.415127813968,0.419124629938,0.423124251824,0.427126613204,
	0.431131651595,0.435139302192,0.439149498975,0.443162178497,0.447177278939,
	0.451194749627,0.455214518806,0.459236536627,0.463260755449,0.467287099845,
	0.471315533996,0.475345999658,0.479378441017,0.483412823085,0.487449073796,
	0.491487164842,0.495527044632,0.499568658653,0.503611970939,0.507656931294,
	0.511703505518,0.515751642167,0.519801302215,0.523852450151,0.527905044751,
	0.531959042936,0.536014411695,0.540071110576,0.544129103670,0.548188362617,
	0.552248844223,0.556310513610,0.560373347842,0.564437304924,0.568502355759,
	0.572568473684,0.576635620403,0.580703772771,0.584772895676,0.588842969747,
	0.592913955436,0.596985838542,0.601058569393,0.605132147916,0.609206543900,
	0.613281722087,0.617357659636,0.621434335939,0.625511725010,0.629589809277,
	0.633668559809,0.637747957919,0.641827978066,0.645908606606,0.649989812418,
	0.654071584228,0.658153895455,0.662236738848,0.666320080635,0.670403910244,
	0.674488206431,0.678572952315,0.682658127683,0.686743721771,0.690829714784,
	0.694916089681,0.699002828632,0.703089917542,0.707177338227,0.711265079252,
	0.715353127596,0.719441466670,0.723530085388,0.727618955185,0.731708076857
	}
};

double always_inline epicclip(double x) {
    double f = fabs(x);
    f = f * epic_table.istep;
    int i = static_cast<int>(f);
    if (i < 0) {
        f = epic_table.data[0];
    } else if (i >= epic_table.size-1) {
        f = epic_table.data[epic_table.size-1];
    } else {
    f -= i;
    f = epic_table.data[i]*(1-f) + epic_table.data[i+1]*f;
    }
    return copysign(f, x);
}

