// generated automatically
// DO NOT MODIFY!
declare id "bassboost";
declare name "bassboost";
declare category "Extern";
declare shortname "bassboost";
declare description "bassboost";

import("stdfaust.lib");

p1 = pre : fi.iir((b0/a0,b1/a0,b2/a0,b3/a0,b4/a0,b5/a0),(a1/a0,a2/a0,a3/a0,a4/a0,a5/a0)) with {
    LogPot(a, x) = ba.if(a, (exp(a * x) - 1) / (exp(a) - 1), x);
    Inverted(b, x) = ba.if(b, 1 - x, x);
    s = 0.993;
    fs = float(ma.SR);
    pre = _;


    Bass = vslider("Bass[name:Bass]", 0.5, 0, 1, 0.01) : Inverted(0) : LogPot(3) : si.smooth(s);


    Treble = vslider("Treble[name:Treble]", 0.5, 0, 1, 0.01) : Inverted(1) : si.smooth(s);

    b0 = Bass*pow(fs,2)*(fs*(fs*(6.57926146005028e-25*fs + 2.29014613813022e-19) + 2.18873241676626e-16) + 1.13076642988554e-12) + Treble*(Bass*pow(fs,3)*(-1.65610877543437e-21*fs + 3.73152921862228e-16) + pow(fs,3)*(-7.41423271126649e-23*fs + 4.30696979666342e-17)) + pow(fs,2)*(fs*(fs*(1.1100516826034e-25*fs + 4.28786459221675e-20) + 5.91300303950352e-17) + 1.30514236262528e-13);

    b1 = Bass*pow(fs,2)*(fs*(fs*(-3.28963073002514e-24*fs - 6.87043841439065e-19) - 2.18873241676626e-16) + 1.13076642988554e-12) + Treble*(Bass*pow(fs,3)*(4.96832632630311e-21*fs - 3.73152921862228e-16) + pow(fs,3)*(2.22426981337995e-22*fs - 4.30696979666342e-17)) + pow(fs,2)*(fs*(fs*(-5.55025841301701e-25*fs - 1.28635937766503e-19) - 5.91300303950352e-17) + 1.30514236262528e-13);

    b2 = Bass*pow(fs,2)*(fs*(fs*(6.57926146005028e-24*fs + 4.58029227626043e-19) - 4.37746483353252e-16) - 2.26153285977108e-12) + Treble*(Bass*pow(fs,3)*(-3.31221755086874e-21*fs - 7.46305843724455e-16) + pow(fs,3)*(-1.4828465422533e-22*fs - 8.61393959332683e-17)) + pow(fs,2)*(fs*(fs*(1.1100516826034e-24*fs + 8.57572918443351e-20) - 1.1826006079007e-16) - 2.61028472525056e-13);

    b3 = Bass*pow(fs,2)*(fs*(fs*(-6.57926146005028e-24*fs + 4.58029227626043e-19) + 4.37746483353252e-16) - 2.26153285977108e-12) + Treble*(Bass*pow(fs,3)*(-3.31221755086874e-21*fs + 7.46305843724455e-16) + pow(fs,3)*(-1.4828465422533e-22*fs + 8.61393959332683e-17)) + pow(fs,2)*(fs*(fs*(-1.1100516826034e-24*fs + 8.57572918443351e-20) + 1.1826006079007e-16) - 2.61028472525056e-13);

    b4 = Bass*pow(fs,2)*(fs*(fs*(3.28963073002514e-24*fs - 6.87043841439065e-19) + 2.18873241676626e-16) + 1.13076642988554e-12) + Treble*(Bass*pow(fs,3)*(4.96832632630311e-21*fs + 3.73152921862228e-16) + pow(fs,3)*(2.22426981337995e-22*fs + 4.30696979666342e-17)) + pow(fs,2)*(fs*(fs*(5.55025841301701e-25*fs - 1.28635937766503e-19) + 5.91300303950352e-17) + 1.30514236262528e-13);

    b5 = Bass*pow(fs,2)*(fs*(fs*(-6.57926146005028e-25*fs + 2.29014613813022e-19) - 2.18873241676626e-16) + 1.13076642988554e-12) + Treble*(Bass*pow(fs,3)*(-1.65610877543437e-21*fs - 3.73152921862228e-16) + pow(fs,3)*(-7.41423271126649e-23*fs - 4.30696979666342e-17)) + pow(fs,2)*(fs*(fs*(-1.1100516826034e-25*fs + 4.28786459221675e-20) - 5.91300303950352e-17) + 1.30514236262528e-13);

    a0 = Bass*(fs*(fs*(fs*(fs*(6.57942645388028e-25*fs + 7.18376662132778e-20) + 7.22534344983954e-16) + 3.67339561983906e-13) + 2.03654396410968e-11) + 2.41715679525452e-10) + Treble*(Bass*fs*(fs*(fs*(fs*(2.19314215129343e-24*fs + 2.16243280841747e-19) + 1.19921353258987e-16) + 6.70480137906176e-15) + 7.97661742433991e-14) + fs*(fs*(fs*(fs*(3.70026506776508e-25*fs + 3.67269006749225e-20) + 4.39948886260948e-17) + 2.59289530839724e-15) + 3.1427872657417e-14)) + fs*(fs*(fs*(fs*(1.11007952032952e-25*fs + 1.22175266260079e-20) + 1.32159434136599e-16) + 1.34487717043281e-13) + 7.86893633821426e-12) + 9.52359777497485e-11;

    a1 = Bass*(fs*(fs*(fs*(fs*(-3.28971322694014e-24*fs - 2.15512998639833e-19) - 7.22534344983954e-16) + 3.67339561983906e-13) + 6.10963189232905e-11) + 1.20857839762726e-9) + Treble*(Bass*fs*(fs*(fs*(fs*(-1.09657107564671e-23*fs - 6.48729842525242e-19) - 1.19921353258987e-16) + 6.70480137906176e-15) + 2.39298522730197e-13) + fs*(fs*(fs*(fs*(-1.85013253388254e-24*fs - 1.10180702024767e-19) - 4.39948886260948e-17) + 2.59289530839724e-15) + 9.4283617972251e-14)) + fs*(fs*(fs*(fs*(-5.55039760164762e-25*fs - 3.66525798780237e-20) - 1.32159434136599e-16) + 1.34487717043281e-13) + 2.36068090146428e-11) + 4.76179888748742e-10;

    a2 = Bass*(fs*(fs*(fs*(fs*(6.57942645388028e-24*fs + 1.43675332426556e-19) - 1.44506868996791e-15) - 7.34679123967813e-13) + 4.07308792821937e-11) + 2.41715679525452e-9) + Treble*(Bass*fs*(fs*(fs*(fs*(2.19314215129343e-23*fs + 4.32486561683495e-19) - 2.39842706517974e-16) - 1.34096027581235e-14) + 1.59532348486798e-13) + fs*(fs*(fs*(fs*(3.70026506776508e-24*fs + 7.3453801349845e-20) - 8.79897772521895e-17) - 5.18579061679447e-15) + 6.2855745314834e-14)) + fs*(fs*(fs*(fs*(1.11007952032952e-24*fs + 2.44350532520158e-20) - 2.64318868273199e-16) - 2.68975434086562e-13) + 1.57378726764285e-11) + 9.52359777497485e-10;

    a3 = Bass*(fs*(fs*(fs*(fs*(-6.57942645388028e-24*fs + 1.43675332426556e-19) + 1.44506868996791e-15) - 7.34679123967813e-13) - 4.07308792821937e-11) + 2.41715679525452e-9) + Treble*(Bass*fs*(fs*(fs*(fs*(-2.19314215129343e-23*fs + 4.32486561683495e-19) + 2.39842706517974e-16) - 1.34096027581235e-14) - 1.59532348486798e-13) + fs*(fs*(fs*(fs*(-3.70026506776508e-24*fs + 7.3453801349845e-20) + 8.79897772521895e-17) - 5.18579061679447e-15) - 6.2855745314834e-14)) + fs*(fs*(fs*(fs*(-1.11007952032952e-24*fs + 2.44350532520158e-20) + 2.64318868273199e-16) - 2.68975434086562e-13) - 1.57378726764285e-11) + 9.52359777497485e-10;

    a4 = Bass*(fs*(fs*(fs*(fs*(3.28971322694014e-24*fs - 2.15512998639833e-19) + 7.22534344983954e-16) + 3.67339561983906e-13) - 6.10963189232905e-11) + 1.20857839762726e-9) + Treble*(Bass*fs*(fs*(fs*(fs*(1.09657107564671e-23*fs - 6.48729842525242e-19) + 1.19921353258987e-16) + 6.70480137906176e-15) - 2.39298522730197e-13) + fs*(fs*(fs*(fs*(1.85013253388254e-24*fs - 1.10180702024767e-19) + 4.39948886260948e-17) + 2.59289530839724e-15) - 9.4283617972251e-14)) + fs*(fs*(fs*(fs*(5.55039760164762e-25*fs - 3.66525798780237e-20) + 1.32159434136599e-16) + 1.34487717043281e-13) - 2.36068090146428e-11) + 4.76179888748742e-10;

    a5 = Bass*(fs*(fs*(fs*(fs*(-6.57942645388028e-25*fs + 7.18376662132778e-20) - 7.22534344983954e-16) + 3.67339561983906e-13) - 2.03654396410968e-11) + 2.41715679525452e-10) + Treble*(Bass*fs*(fs*(fs*(fs*(-2.19314215129343e-24*fs + 2.16243280841747e-19) - 1.19921353258987e-16) + 6.70480137906176e-15) - 7.97661742433991e-14) + fs*(fs*(fs*(fs*(-3.70026506776508e-25*fs + 3.67269006749225e-20) - 4.39948886260948e-17) + 2.59289530839724e-15) - 3.1427872657417e-14)) + fs*(fs*(fs*(fs*(-1.11007952032952e-25*fs + 1.22175266260079e-20) - 1.32159434136599e-16) + 1.34487717043281e-13) - 7.86893633821426e-12) + 9.52359777497485e-11;
};

process =  p1 ;