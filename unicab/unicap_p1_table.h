
// unicap_p1_table generated by DK/circ_table_gen.py -- do not modify manually

 // variables used
 // --sig_max  1.400000
 // --table_div  1.269757
 // --table_op  1.000000

struct tableunicap_p1 { // 1-dimensional function table
    float low;
    float high;
    float istep;
    int size;
    float data[];
};

template <int tab_size>
struct tableunicap_p1_imp {
    float low;
    float high;
    float istep;
    int size;
    float data[tab_size];
    operator tableunicap_p1&() const { return *(tableunicap_p1*)this; }
};

 static tableunicap_p1_imp<200> unicap_p1_table __rt_data = {
	0,0.833333,142.143,200, {
	0.000000000000,0.000001043228,0.000009797907,0.000046335542,0.000149818328,
	0.000377945088,0.000800837695,0.001492055338,0.002519212645,0.003936104860,
	0.005777498666,0.008056999854,0.010767784286,0.013885548950,0.017372826480,
	0.021183788984,0.025268797745,0.029578174482,0.034064918261,0.038686321332,
	0.043404614389,0.048186881292,0.053004524953,0.057832550754,0.062648879188,
	0.067433824871,0.072169802385,0.076841253922,0.081434747552,0.085939170669,
	0.090345939217,0.094649154979,0.098845664395,0.102934997122,0.106919185626,
	0.110802485031,0.114591023555,0.118292417847,0.121915385620,0.125469381750,
	0.128964275640,0.132410078932,0.135816724987,0.139193895907,0.142550889552,
	0.145896517827,0.149239028099,0.152586041328,0.155944502662,0.159320642400,
	0.162719946951,0.166147140485,0.169606178391,0.173100253480,0.176631815334,
	0.180202602374,0.183813685480,0.187465521292,0.191158012891,0.194890575368,
	0.198662203837,0.202471541676,0.206316947171,0.210196557113,0.214108346364,
	0.218050182736,0.222019876824,0.226015226674,0.230034057257,0.234074254832,
	0.238133796313,0.242210773762,0.246303414151,0.250410094567,0.254529353044,
	0.258659895266,0.262800597422,0.266950505554,0.271108831765,0.275274947714,
	0.279448375817,0.283628778609,0.287815946686,0.292009785643,0.296210302397,
	0.300417591220,0.304631819803,0.308853215607,0.313082052706,0.317318639331,
	0.321563306237,0.325816396020,0.330078253458,0.334349216940,0.338629611015,
	0.342919740064,0.347219883082,0.351530289559,0.355851176383,0.360182725736,
	0.364525083886,0.368878360809,0.373242630551,0.377617932226,0.382004271576,
	0.386401622983,0.390809931849,0.395229117256,0.399659074825,0.404099679691,
	0.408550789535,0.413012247602,0.417483885652,0.421965526803,0.426456988215,
	0.430958083595,0.435468625491,0.439988427349,0.444517305345,0.449055079957,
	0.453601577293,0.458156630179,0.462720079003,0.467291772342,0.471871567375,
	0.476459330095,0.481054935361,0.485658266777,0.490269216445,0.494887684597,
	0.499513579135,0.504146815089,0.508787314025,0.513435003406,0.518089815931,
	0.522751688869,0.527420563395,0.532096383939,0.536779097568,0.541468653396,
	0.546165002042,0.550868095128,0.555577884834,0.560294323501,0.565017363290,
	0.569746955896,0.574483052311,0.579225602647,0.583974555994,0.588729860339,
	0.593491462511,0.598259308176,0.603033341860,0.607813507002,0.612599746026,
	0.617392000447,0.622190210977,0.626994317653,0.631804259969,0.636619977016,
	0.641441407621,0.646268490480,0.651101164298,0.655939367915,0.660783040423,
	0.665632121280,0.670486550411,0.675346268294,0.680211216039,0.685081335459,
	0.689956569115,0.694836860367,0.699722153404,0.704612393261,0.709507525838,
	0.714407497899,0.719312257065,0.724221751806,0.729135931423,0.734054746020,
	0.738978146482,0.743906084440,0.748838512241,0.753775382913,0.758716650128,
	0.763662268166,0.768612191884,0.773566376676,0.778524778445,0.783487353571,
	0.788454058881,0.793424851622,0.798399689441,0.803378530358,0.808361332754,
	0.813348055347,0.818338657185,0.823333097631,0.828331336357,0.833333333333
	}
};

double always_inline unicap_p1clip(double x) {
    double f = fabs(x);
    f = f * unicap_p1_table.istep;
    int i = static_cast<int>(f);
    if (i < 0) {
        f = unicap_p1_table.data[0];
    } else if (i >= unicap_p1_table.size-1) {
        f = unicap_p1_table.data[unicap_p1_table.size-1];
    } else {
    f -= i;
    f = unicap_p1_table.data[i]*(1-f) + unicap_p1_table.data[i+1]*f;
    }
    return copysign(f, x);
}

